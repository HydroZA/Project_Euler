#Problem 2
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import math

def FibonacciGenerator(highest):
	fibonacci = []
	
	#Use Binets formula for nth term of fibonacci
	phi = ( math.sqrt(5) + 1 ) / 2
	negphi = ( math.sqrt(5) - 1 ) / 2
	n = 1
	fib = 0
	while fib < highest:
		x = ( math.pow(phi, n) / math.sqrt(5) ) 
		y = ( math.pow(negphi, n) / math.sqrt(5) )
		fib = int(x+y)
		if (int(x+y)) % 2 == 0:
			fibonacci.append(fib)
		n+=1

	sum_fibs = 0
	for i in fibonacci:
		sum_fibs += i
	return sum_fibs


highest = int(input("enter highest: "))
print ("The sum of even numbers in the fibonnaci sequence up to " + str(highest) + " = " + str(FibonacciGenerator(highest)))